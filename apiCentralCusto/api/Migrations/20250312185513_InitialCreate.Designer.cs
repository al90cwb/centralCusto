// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using api.model;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250312185513_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("api.Models.CategoriaEntrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CategoriaEntradas");
                });

            modelBuilder.Entity("api.Models.CategoriaSaida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CategoriaSaidas");
                });

            modelBuilder.Entity("api.Models.CentralCusto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("CentralCustos");
                });

            modelBuilder.Entity("api.Models.LancamentoEntrada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaEntradaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CentralCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DuracaoMeses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadoLancamento")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PagamentoConfirmado")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaEntradaId");

                    b.HasIndex("CentralCustoId");

                    b.ToTable("LancamentoEntradas");
                });

            modelBuilder.Entity("api.Models.LancamentoSaida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaSaidaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CentralCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EstadoLancamento")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PagamentoConfirmado")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaSaidaId");

                    b.HasIndex("CentralCustoId");

                    b.ToTable("LancamentoSaidas");
                });

            modelBuilder.Entity("api.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CentralCustoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Credencial")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("api.Models.CentralCusto", b =>
                {
                    b.HasOne("api.Models.Usuario", "Usuario")
                        .WithOne("CentralCusto")
                        .HasForeignKey("api.Models.CentralCusto", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("api.Models.LancamentoEntrada", b =>
                {
                    b.HasOne("api.Models.CategoriaEntrada", "CategoriaEntrada")
                        .WithMany()
                        .HasForeignKey("CategoriaEntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.CentralCusto", null)
                        .WithMany("Entradas")
                        .HasForeignKey("CentralCustoId");

                    b.Navigation("CategoriaEntrada");
                });

            modelBuilder.Entity("api.Models.LancamentoSaida", b =>
                {
                    b.HasOne("api.Models.CategoriaSaida", "CategoriaSaida")
                        .WithMany()
                        .HasForeignKey("CategoriaSaidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Models.CentralCusto", null)
                        .WithMany("Saidas")
                        .HasForeignKey("CentralCustoId");

                    b.Navigation("CategoriaSaida");
                });

            modelBuilder.Entity("api.Models.CentralCusto", b =>
                {
                    b.Navigation("Entradas");

                    b.Navigation("Saidas");
                });

            modelBuilder.Entity("api.Models.Usuario", b =>
                {
                    b.Navigation("CentralCusto");
                });
#pragma warning restore 612, 618
        }
    }
}
